// Accessibility color function, takes a color input and outputs
// the proper contrast color base on the input.
// NOTE: color must not contain any opacity (RGBA) values
@function contrast-check($color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);
  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;
  @if ($yiq >= 150) {
    @return black;
  } @else {
    @return white;
  }
}

@function color($key: 'dark') {
  @return map-get($colors, $key);
}

@function neutral($key: 'grey60') {
  @return map-get($neutral, $key);
}

@function primary($key: 'green80') {
  @return map-get($primary, $key);
}

@function secondary($key: 'lime50') {
  @return map-get($secondary, $key);
}

@function accent1($key: 'neon50') {
  @return map-get($accent1, $key);
}

@function accent2($key: 'pink50') {
  @return map-get($accent2, $key);
}

@function max-width($key: 'xs') {
  @return map-get($max-width, $key);
}

@function font-weight($key: 'regular') {
  @return map-get($font-weights, $key);
}

@function hexToRGB($hex) {
  @return red($hex), green($hex), blue($hex);
}
